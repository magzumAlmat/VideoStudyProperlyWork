{"ast":null,"code":"import _slicedToArray from \"E:\\\\ALphaVideoStudy\\\\VideoStudy\\\\server\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\ALphaVideoStudy\\\\VideoStudy\\\\server\\\\client\\\\src\\\\components\\\\auth\\\\ReCaptha.js\";\nimport React, { useRef, useState } from \"react\";\nimport { ReCAPTCHA } from \"react-google-recaptcha\";\nexport default function ReCAPT() {\n  const captchaRef = useRef();\n\n  const _useState = useState(\"Start editing to see some magic happen!\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        text = _useState2[0],\n        setText = _useState2[1];\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Hello CodeSandbox\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, text), React.createElement(ReCAPTCHA, {\n    ref: captchaRef,\n    sitekey: \"6LfHH6IgAAAAALhz3rRxoFbMd31oxbgYYuv_pBpu\",\n    onChange: value => {\n      setText(\"There you go!!!!!!!!!!! \".concat(value));\n    },\n    size: \"invisible\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: event => {\n      setText(\"yes. it was a click\");\n      captchaRef.current.execute();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Click me\"));\n}","map":{"version":3,"sources":["E:\\ALphaVideoStudy\\VideoStudy\\server\\client\\src\\components\\auth\\ReCaptha.js"],"names":["React","useRef","useState","ReCAPTCHA","ReCAPT","captchaRef","text","setText","value","event","current","execute"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,SAAT,QAA0B,wBAA1B;AAEA,eAAe,SAASC,MAAT,GAAkB;AAC/B,QAAMC,UAAU,GAAGJ,MAAM,EAAzB;;AAD+B,oBAEPC,QAAQ,CAAC,yCAAD,CAFD;AAAA;AAAA,QAExBI,IAFwB;AAAA,QAElBC,OAFkB;;AAG/B,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAL,CAFF,EAGE,oBAAC,SAAD;AACE,IAAA,GAAG,EAAED,UADP;AAEE,IAAA,OAAO,EAAC,0CAFV;AAGE,IAAA,QAAQ,EAAGG,KAAD,IAAW;AACnBD,MAAAA,OAAO,mCAA4BC,KAA5B,EAAP;AACD,KALH;AAME,IAAA,IAAI,EAAC,WANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAWE;AACE,IAAA,OAAO,EAAGC,KAAD,IAAW;AAClBF,MAAAA,OAAO,CAAC,qBAAD,CAAP;AACAF,MAAAA,UAAU,CAACK,OAAX,CAAmBC,OAAnB;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,CADF;AAsBD","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { ReCAPTCHA } from \"react-google-recaptcha\";\n\nexport default function ReCAPT() {\n  const captchaRef = useRef();\n  const [text, setText] = useState(\"Start editing to see some magic happen!\");\n  return (\n    <div className=\"App\">\n      <h1>Hello CodeSandbox</h1>\n      <h2>{text}</h2>\n      <ReCAPTCHA\n        ref={captchaRef}\n        sitekey=\"6LfHH6IgAAAAALhz3rRxoFbMd31oxbgYYuv_pBpu\"\n        onChange={(value) => {\n          setText(`There you go!!!!!!!!!!! ${value}`);\n        }}\n        size=\"invisible\"\n      />\n      <button\n        onClick={(event) => {\n          setText(\"yes. it was a click\");\n          captchaRef.current.execute();\n        }}\n      >\n        Click me\n      </button>\n    </div>\n  );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}